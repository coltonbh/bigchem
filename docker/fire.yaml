# Quick and dirty workers for Fire. Dev/prod

version: "3.8"

# Default images and setup for worker containers
x-default-worker: &default-worker
  image: mtzgroup/bigchem-worker:{$BIGCHEM_VERSION}
  environment:
    - TERACHEM_PBS_HOST={{.Node.Hostname}}-terachem-{{.Task.Slot}}
    - TERACHEM_FE_HOST={{.Node.Hostname}}-terachem-frontend
  volumes:
    # qcengine uses /tmp by default for scratch directory
    - scratch:/tmp
  networks:
    - terachem-servers

x-default-dev-worker: &default-dev-worker
  <<: *default-worker
  env_file: worker.dev.env
  volumes:
    - tcc-dev-scratch:/scratch

x-default-prod-worker: &default-prod-worker
  <<: *default-worker
  env_file: worker.prod.env
  volumes:
    - tcc-prod-scratch:/scratch

services:
  ## DEV WORKER
  # This Service is a hack to communicate with terachem on GPU 0 since I'm leveraing
  # 1-indexed {{.Task.Slot}} for worker allocation below
  fire-dev-11-03:
    <<: *default-dev-worker
    environment:
      # Must redefine all `environment` values because redefinition of `environment`
      # here overrides all values set in *default-worker, even if not defined twice
      - TERACHEM_PBS_HOST={{.Node.Hostname}}-terachem-0
      - TERACHEM_FE_HOST={{.Node.Hostname}}-terachem-frontend
    deploy:
      mode: global

  # PROD WORKERS
  fire-11-03:
    <<: *default-prod-worker
    deploy:
      replicas: 7
      placement:
        constraints:
          - node.hostname==fire-11-03
    command: celery -A bigchem.tasks worker -Q private --without-heartbeat --without-mingle --without-gossip --loglevel=INFO

secrets:
  terachem_license:
    external: true

volumes:
  tcc-dev-scratch:
  tcc-prod-scratch:

networks:
  terachem-servers:
    external: true
